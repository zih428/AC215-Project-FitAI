services:
  db:
    image: postgres:15
    container_name: fitai-db
    environment:
      POSTGRES_USER: fitai
      POSTGRES_PASSWORD: fitai
      POSTGRES_DB: fitai_app
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./services/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"   # âœ… expose Postgres so VS Code (localhost) can connect

  pipeline:
    build: ./services/pipeline
    container_name: fitai-pipeline
    environment:
      POSTGRES_USER: fitai
      POSTGRES_PASSWORD: fitai
      POSTGRES_DB: fitai_app
      POSTGRES_HOST: db   # internal Docker DNS, works inside network
      POSTGRES_PORT: 5432
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/rich-access-471117-r0-f17d92fbf298.json
    volumes:
      - ./rich-access-471117-r0-f17d92fbf298.json:/secrets/rich-access-471117-r0-f17d92fbf298.json:ro
      - ./services/pipeline:/app   # mount your pipeline code
    depends_on:
      - db
    ports:
      - "8001:8001"

  ocr_engine:
    build: ./services/ocr_engine
    container_name: fitai-ocr-engine
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/rich-access-471117-r0-f17d92fbf298.json
      VISION_CREDENTIALS: /secrets/ac215-471616-590d86ddb6a0.json
      START_ON_BOOT: "true"
      PROCESS_FULL_FOLDER: "true"
    volumes:
      - ./ac215-471616-590d86ddb6a0.json:/secrets/ac215-471616-590d86ddb6a0.json:ro
      - ./rich-access-471117-r0-f17d92fbf298.json:/secrets/rich-access-471117-r0-f17d92fbf298.json:ro
      - ./services/ocr_engine:/app
    ports:
      - "8003:8003"

  rag-cli:
    build:
      context: ./services/rag_pipeline
    container_name: fitai-rag-cli
    volumes:
      - ./services/rag_pipeline:/app
      - ./secrets/rich-access-471117-r0-f17d92fbf298.json:/secrets/rich-access-471117-r0-f17d92fbf298.json:ro
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/rich-access-471117-r0-f17d92fbf298.json
      GCP_PROJECT: rich-access-471117-r0
      CHROMADB_HOST: chromadb
      CHROMADB_PORT: 8000
    depends_on:
      - chromadb
    ports:
      - "8002:8002"

  chromadb:
    image: chromadb/chroma:latest
    container_name: llm-rag-chromadb
    ports:
      - "8000:8000"
    volumes:
      - ./docker-volumes/chromadb:/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
      - CHROMA_CORS_ALLOW_ORIGINS=["*"]
      
  # frontend:
  #   build: ./services/frontend
  #   container_name: fitai-frontend
  #   depends_on:
  #     - ml
  #     - pipeline
  #   ports:
  #     - "3000:3000"

volumes:
  db-data: